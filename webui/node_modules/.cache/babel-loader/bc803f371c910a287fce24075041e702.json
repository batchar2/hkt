{"ast":null,"code":"var _jsxFileName = \"/home/vladislav/React/app2/hkt/webui/src/pages/AuthPage/AuthPage.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { actions as routerActions, createRouteNodeSelector } from 'redux-router5';\nimport './AuthPage.css';\nimport avatar from './avatar.png';\nimport { USER } from '../../utils/';\nimport { ROUTES } from '../../constants/router.consts';\nimport userActions from '../../store/actions/user.actions.js';\n\nclass AuthPage extends React.Component {\n  handleSubmit(event) {\n    event.preventDefault();\n    const email = this.getUserEmail.value;\n    const password = this.getUserPassword.value;\n    this.props.onLogin(email, password);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const user = nextProps.user;\n\n    if (user) {\n      if (USER.isAuthUser(user) && USER.isRegularUser(user)) {\n        this.props.navigateTo(ROUTES.PRODUCT_LIST);\n      }\n    }\n  }\n\n  render() {\n    let msg = null;\n    let styleField = null;\n    let styleText = null;\n\n    if (!USER.isAuthUser(this.props.user) && USER.isAuthError(this.props.user)) {\n      msg = 'The email or password is incorrect';\n      styleText = {\n        color: 'red'\n      };\n      styleField = {\n        border: '1px solid red'\n      };\n    }\n\n    return React.createElement(\"div\", {\n      className: \"card card-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"profile-img\",\n      className: \"profile-img-card\",\n      alt: \"avatar\",\n      src: avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      id: \"profile-name\",\n      className: \"profile-name-card\",\n      style: styleText ? styleText : {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, msg), React.createElement(\"form\", {\n      className: \"form-signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"reauth-email\",\n      className: \"reauth-email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: styleField ? styleField : {},\n      type: \"email\",\n      id: \"inputEmail\",\n      className: \"form-control\",\n      placeholder: \"Email address\",\n      required: true,\n      autoFocus: true,\n      ref: input => this.getUserEmail = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: styleField ? styleField : {},\n      type: \"password\",\n      id: \"inputPassword\",\n      className: \"form-control\",\n      placeholder: \"Password\",\n      required: true,\n      ref: input => this.getUserPassword = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"remember\",\n      className: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"remember-me\",\n      defaultChecked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      id: \"remember-me\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Remember me\"))), React.createElement(\"button\", {\n      className: \"btn btn-lg btn-primary btn-block btn-signin\",\n      type: \"submit\",\n      onClick: e => this.handleSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Sign in\")));\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user\n}), dispatch => ({\n  // пользователь нажал регистрацию\n  onLogin: (email, password) => {\n    dispatch(userActions.onLogin(email, password));\n  },\n  onIsAuth: () => {\n    dispatch(userActions.isAuth());\n  },\n  navigateTo: (name, params = {}) => {\n    dispatch(routerActions.navigateTo(name, params));\n  }\n}))(AuthPage);","map":{"version":3,"sources":["/home/vladislav/React/app2/hkt/webui/src/pages/AuthPage/AuthPage.js"],"names":["React","connect","actions","routerActions","createRouteNodeSelector","avatar","USER","ROUTES","userActions","AuthPage","Component","handleSubmit","event","preventDefault","email","getUserEmail","value","password","getUserPassword","props","onLogin","componentWillReceiveProps","nextProps","user","isAuthUser","isRegularUser","navigateTo","PRODUCT_LIST","render","msg","styleField","styleText","isAuthError","color","border","input","e","state","dispatch","onIsAuth","isAuth","name","params"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,OAAO,IAAIC,aAApB,EAAmCC,uBAAnC,QAAkE,eAAlE;AAEA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,SAAQC,IAAR,QAAmB,cAAnB;AACA,SAASC,MAAT,QAAuB,+BAAvB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;;AAEA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AAGnCC,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,KAAK,GAAG,KAAKC,YAAL,CAAkBC,KAAhC;AACA,UAAMC,QAAQ,GAAG,KAAKC,eAAL,CAAqBF,KAAtC;AACA,SAAKG,KAAL,CAAWC,OAAX,CAAmBN,KAAnB,EAA0BG,QAA1B;AACH;;AAEDI,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjC,UAAMC,IAAI,GAAGD,SAAS,CAACC,IAAvB;;AACA,QAAIA,IAAJ,EAAU;AACL,UAAIjB,IAAI,CAACkB,UAAL,CAAgBD,IAAhB,KAAyBjB,IAAI,CAACmB,aAAL,CAAmBF,IAAnB,CAA7B,EAAuD;AACnD,aAAKJ,KAAL,CAAWO,UAAX,CAAsBnB,MAAM,CAACoB,YAA7B;AACH;AACJ;AACL;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,GAAG,GAAG,IAAV;AACA,QAAIC,UAAU,GAAG,IAAjB;AACA,QAAIC,SAAS,GAAG,IAAhB;;AACA,QAAI,CAACzB,IAAI,CAACkB,UAAL,CAAgB,KAAKL,KAAL,CAAWI,IAA3B,CAAD,IAAqCjB,IAAI,CAAC0B,WAAL,CAAiB,KAAKb,KAAL,CAAWI,IAA5B,CAAzC,EAA4E;AACxEM,MAAAA,GAAG,GAAG,oCAAN;AACAE,MAAAA,SAAS,GAAG;AAACE,QAAAA,KAAK,EAAE;AAAR,OAAZ;AACAH,MAAAA,UAAU,GAAG;AAACI,QAAAA,MAAM,EAAE;AAAT,OAAb;AACH;;AACD,WACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,EAAE,EAAC,aADP;AAEI,MAAA,SAAS,EAAC,kBAFd;AAGI,MAAA,GAAG,EAAC,QAHR;AAII,MAAA,GAAG,EAAE7B,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI;AACI,MAAA,EAAE,EAAC,cADP;AAEI,MAAA,SAAS,EAAC,mBAFd;AAGI,MAAA,KAAK,EAAG0B,SAAD,GAAeA,SAAf,GAA4B,EAHvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKKF,GALL,CANJ,EAaI;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,EAAE,EAAC,cAAT;AAAwB,MAAA,SAAS,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AACI,MAAA,KAAK,EAAGC,UAAD,GAAgBA,UAAhB,GAA8B,EADzC;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,EAAE,EAAC,YAHP;AAII,MAAA,SAAS,EAAC,cAJd;AAKI,MAAA,WAAW,EAAC,eALhB;AAMI,MAAA,QAAQ,MANZ;AAMa,MAAA,SAAS,MANtB;AAOI,MAAA,GAAG,EAAEK,KAAK,IAAI,KAAKpB,YAAL,GAAoBoB,KAPtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAWI;AACI,MAAA,KAAK,EAAGL,UAAD,GAAgBA,UAAhB,GAA8B,EADzC;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,EAAE,EAAC,eAHP;AAII,MAAA,SAAS,EAAC,cAJd;AAKI,MAAA,WAAW,EAAC,UALhB;AAMI,MAAA,QAAQ,MANZ;AAOI,MAAA,GAAG,EAAEK,KAAK,IAAI,KAAKjB,eAAL,GAAuBiB,KAPzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,EAoBI;AAAK,MAAA,EAAE,EAAC,UAAR;AAAmB,MAAA,SAAS,EAAC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,EAAE,EAAC,aAA1B;AAAwC,MAAA,cAAc,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,EAAE,EAAC,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CADJ,CApBJ,EA0BG;AACK,MAAA,SAAS,EAAC,6CADf;AAEK,MAAA,IAAI,EAAC,QAFV;AAGK,MAAA,OAAO,EAAEC,CAAC,IAAI,KAAKzB,YAAL,CAAkByB,CAAlB,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA1BH,CAbJ,CADJ;AAkDH;;AA/EkC;;AAkFvC,eAAenC,OAAO,CAClBoC,KAAK,KAAK;AACNd,EAAAA,IAAI,EAAEc,KAAK,CAACd;AADN,CAAL,CADa,EAIlBe,QAAQ,KAAK;AACT;AACAlB,EAAAA,OAAO,EAAE,CAACN,KAAD,EAAQG,QAAR,KAAqB;AAC1BqB,IAAAA,QAAQ,CAAC9B,WAAW,CAACY,OAAZ,CAAoBN,KAApB,EAA2BG,QAA3B,CAAD,CAAR;AACH,GAJQ;AAKTsB,EAAAA,QAAQ,EAAE,MAAM;AACZD,IAAAA,QAAQ,CAAC9B,WAAW,CAACgC,MAAZ,EAAD,CAAR;AACH,GAPQ;AAQTd,EAAAA,UAAU,EAAE,CAACe,IAAD,EAAOC,MAAM,GAAC,EAAd,KAAqB;AAC7BJ,IAAAA,QAAQ,CAACnC,aAAa,CAACuB,UAAd,CAAyBe,IAAzB,EAA+BC,MAA/B,CAAD,CAAR;AACH;AAVQ,CAAL,CAJU,CAAP,CAgBbjC,QAhBa,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { actions as routerActions, createRouteNodeSelector } from 'redux-router5';\n\nimport './AuthPage.css';\nimport avatar from './avatar.png';\n\nimport {USER} from '../../utils/';\nimport { ROUTES } from '../../constants/router.consts';\nimport userActions from '../../store/actions/user.actions.js';\n\nclass AuthPage extends React.Component {\n\n    isAuthPage: true\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const email = this.getUserEmail.value;\n        const password = this.getUserPassword.value;\n        this.props.onLogin(email, password);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const user = nextProps.user;\n        if (user) {\n             if (USER.isAuthUser(user) && USER.isRegularUser(user)) {\n                 this.props.navigateTo(ROUTES.PRODUCT_LIST);\n             }\n         }\n    }\n\n    render() {\n        let msg = null;\n        let styleField = null;\n        let styleText = null;\n        if (!USER.isAuthUser(this.props.user) && USER.isAuthError(this.props.user)) {\n            msg = 'The email or password is incorrect';\n            styleText = {color: 'red'};\n            styleField = {border: '1px solid red'};\n        }\n        return (\n            <div className=\"card card-container\">\n                <img\n                    id=\"profile-img\"\n                    className=\"profile-img-card\"\n                    alt=\"avatar\"\n                    src={avatar} />\n                <p\n                    id=\"profile-name\"\n                    className=\"profile-name-card\"\n                    style={(styleText) ? (styleText) : {}}\n                >\n                    {msg}\n                </p>\n                <form className=\"form-signin\">\n                    <span id=\"reauth-email\" className=\"reauth-email\"></span>\n                    <input\n                        style={(styleField) ? (styleField) : {}}\n                        type=\"email\"\n                        id=\"inputEmail\"\n                        className=\"form-control\"\n                        placeholder=\"Email address\"\n                        required autoFocus\n                        ref={input => this.getUserEmail = input}\n                    />\n                    <input\n                        style={(styleField) ? (styleField) : {}}\n                        type=\"password\"\n                        id=\"inputPassword\"\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                        required\n                        ref={input => this.getUserPassword = input}\n                    />\n                    <div id=\"remember\" className=\"checkbox\">\n                        <label>\n                            <input type=\"checkbox\" id=\"remember-me\" defaultChecked/>\n                            <label id=\"remember-me\">Remember me</label>\n                        </label>\n                    </div>\n                   <button\n                        className=\"btn btn-lg btn-primary btn-block btn-signin\"\n                        type=\"submit\"\n                        onClick={e => this.handleSubmit(e)}\n                    >\n                        Sign in\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        user: state.user,\n    }),\n    dispatch => ({\n        // пользователь нажал регистрацию\n        onLogin: (email, password) => {\n            dispatch(userActions.onLogin(email, password));\n        },\n        onIsAuth: () => {\n            dispatch(userActions.isAuth());\n        },\n        navigateTo: (name, params={}) => {\n            dispatch(routerActions.navigateTo(name, params));\n        }\n    }),\n)(AuthPage);\n"]},"metadata":{},"sourceType":"module"}