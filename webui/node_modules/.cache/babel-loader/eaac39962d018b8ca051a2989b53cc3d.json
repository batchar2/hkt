{"ast":null,"code":"import { shouldUpdateNode } from 'router5-transition-path';\nimport React, { Component, useContext, useEffect, useState } from 'react';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n}\n\nvar createContext = React.createContext;\nvar routeContext = createContext(null);\nvar routerContext = createContext(null);\n\nvar RouterProvider =\n/** @class */\nfunction (_super) {\n  __extends(RouterProvider, _super);\n\n  function RouterProvider(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.mounted = false;\n    _this.routeState = {\n      route: props.router.getState(),\n      previousRoute: null\n    };\n\n    if (typeof window !== 'undefined') {\n      var listener = function (_a) {\n        var route = _a.route,\n            previousRoute = _a.previousRoute;\n        _this.routeState = {\n          route: route,\n          previousRoute: previousRoute\n        };\n\n        if (_this.mounted) {\n          _this.forceUpdate();\n        }\n      };\n\n      _this.unsubscribe = _this.props.router.subscribe(listener);\n    }\n\n    return _this;\n  }\n\n  RouterProvider.prototype.componentDidMount = function () {\n    this.mounted = true;\n  };\n\n  RouterProvider.prototype.componentWillUnmount = function () {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  };\n\n  RouterProvider.prototype.render = function () {\n    return React.createElement(routerContext.Provider, {\n      value: this.props.router\n    }, React.createElement(routeContext.Provider, {\n      value: __assign({\n        router: this.props.router\n      }, this.routeState)\n    }, this.props.children));\n  };\n\n  return RouterProvider;\n}(React.PureComponent);\n\nvar BaseLink =\n/** @class */\nfunction (_super) {\n  __extends(BaseLink, _super);\n\n  function BaseLink(props, context) {\n    var _this = _super.call(this, props, context) || this;\n\n    _this.router = _this.props.router;\n    _this.isActive = _this.isActive.bind(_this);\n    _this.clickHandler = _this.clickHandler.bind(_this);\n    _this.callback = _this.callback.bind(_this);\n    _this.state = {\n      active: _this.isActive()\n    };\n    return _this;\n  }\n\n  BaseLink.prototype.buildUrl = function (routeName, routeParams) {\n    //@ts-ignore\n    if (this.router.buildUrl) {\n      //@ts-ignore\n      return this.router.buildUrl(routeName, routeParams);\n    }\n\n    return this.router.buildPath(routeName, routeParams);\n  };\n\n  BaseLink.prototype.isActive = function () {\n    var _a = this.props,\n        routeName = _a.routeName,\n        _b = _a.routeParams,\n        routeParams = _b === void 0 ? {} : _b,\n        _c = _a.activeStrict,\n        activeStrict = _c === void 0 ? false : _c,\n        _d = _a.ignoreQueryParams,\n        ignoreQueryParams = _d === void 0 ? true : _d;\n    return this.router.isActive(routeName, routeParams, activeStrict, ignoreQueryParams);\n  };\n\n  BaseLink.prototype.callback = function (err, state) {\n    if (!err && this.props.successCallback) {\n      this.props.successCallback(state);\n    }\n\n    if (err && this.props.errorCallback) {\n      this.props.errorCallback(err);\n    }\n  };\n\n  BaseLink.prototype.clickHandler = function (evt) {\n    var _a = this.props,\n        onClick = _a.onClick,\n        target = _a.target;\n\n    if (onClick) {\n      onClick(evt);\n\n      if (evt.defaultPrevented) {\n        return;\n      }\n    }\n\n    var comboKey = evt.metaKey || evt.altKey || evt.ctrlKey || evt.shiftKey;\n\n    if (evt.button === 0 && !comboKey && target !== '_blank') {\n      evt.preventDefault();\n      this.router.navigate(this.props.routeName, this.props.routeParams || {}, this.props.routeOptions || {}, this.callback);\n    }\n  };\n\n  BaseLink.prototype.render = function () {\n    /* eslint-disable */\n    var _a = this.props,\n        routeName = _a.routeName,\n        routeParams = _a.routeParams,\n        routeOptions = _a.routeOptions,\n        className = _a.className,\n        _b = _a.activeClassName,\n        activeClassName = _b === void 0 ? 'active' : _b,\n        activeStrict = _a.activeStrict,\n        ignoreQueryParams = _a.ignoreQueryParams,\n        route = _a.route,\n        previousRoute = _a.previousRoute,\n        router = _a.router,\n        children = _a.children,\n        onClick = _a.onClick,\n        successCallback = _a.successCallback,\n        errorCallback = _a.errorCallback,\n        linkProps = __rest(_a, [\"routeName\", \"routeParams\", \"routeOptions\", \"className\", \"activeClassName\", \"activeStrict\", \"ignoreQueryParams\", \"route\", \"previousRoute\", \"router\", \"children\", \"onClick\", \"successCallback\", \"errorCallback\"]);\n    /* eslint-enable */\n\n\n    var active = this.isActive();\n    var href = this.buildUrl(routeName, routeParams);\n    var linkclassName = (active ? [activeClassName] : []).concat(className ? className.split(' ') : []).join(' ');\n    return React.createElement('a', __assign({}, linkProps, {\n      href: href,\n      className: linkclassName,\n      onClick: this.clickHandler\n    }), children);\n  };\n\n  return BaseLink;\n}(Component);\n\nfunction withRouter(BaseComponent) {\n  return function WithRouter(props) {\n    return React.createElement(routerContext.Consumer, null, function (router) {\n      return React.createElement(BaseComponent, __assign({}, props, {\n        router: router\n      }));\n    });\n  };\n}\n\nfunction withRoute(BaseComponent) {\n  return function withRoute(props) {\n    return React.createElement(routeContext.Consumer, null, function (routeContext$$1) {\n      return React.createElement(BaseComponent, __assign({}, props, routeContext$$1));\n    });\n  };\n}\n\nvar RouteNodeRenderer =\n/** @class */\nfunction (_super) {\n  __extends(RouteNodeRenderer, _super);\n\n  function RouteNodeRenderer(props) {\n    return _super.call(this, props) || this;\n  }\n\n  RouteNodeRenderer.prototype.shouldComponentUpdate = function (nextProps) {\n    return shouldUpdateNode(this.props.nodeName)(nextProps.route, nextProps.previousRoute);\n  };\n\n  RouteNodeRenderer.prototype.render = function () {\n    var _a = this.props,\n        router = _a.router,\n        route = _a.route,\n        previousRoute = _a.previousRoute;\n    return this.props.children({\n      router: router,\n      route: route,\n      previousRoute: previousRoute\n    });\n  };\n\n  return RouteNodeRenderer;\n}(React.Component);\n\nvar RouteNode = function (props) {\n  return React.createElement(routeContext.Consumer, null, function (routeContext$$1) {\n    return React.createElement(RouteNodeRenderer, __assign({}, props, routeContext$$1));\n  });\n};\n\nfunction routeNode(nodeName) {\n  return function (BaseComponent) {\n    function RouteNodeWrapper(props) {\n      return React.createElement(RouteNode, {\n        nodeName: nodeName\n      }, function (routeContext) {\n        return React.createElement(BaseComponent, __assign({}, props, routeContext));\n      });\n    }\n\n    return RouteNodeWrapper;\n  };\n}\n\nfunction useRouter() {\n  return useContext(routerContext);\n}\n\nfunction useRoute() {\n  return useContext(routeContext);\n}\n\nfunction useRouter$1(nodeName) {\n  var router = useContext(routerContext);\n\n  var _a = useState(function () {\n    return {\n      previousRoute: null,\n      route: router.getState()\n    };\n  }),\n      state = _a[0],\n      setState = _a[1];\n\n  useEffect(function () {\n    return router.subscribe(function (_a) {\n      var route = _a.route,\n          previousRoute = _a.previousRoute;\n      var shouldUpdate = shouldUpdateNode(nodeName)(route, previousRoute);\n\n      if (shouldUpdate) {\n        setState({\n          route: route,\n          previousRoute: previousRoute\n        });\n      }\n    });\n  }, []);\n  return __assign({\n    router: router\n  }, state);\n}\n\nvar ConnectedLink = withRoute(BaseLink);\nvar Link = withRouter(BaseLink);\nvar Router = routerContext.Consumer;\nvar Route = routeContext.Consumer;\nexport { RouterProvider, BaseLink, ConnectedLink, Link, withRouter, withRoute, routeNode, Router, Route, RouteNode, useRouter, useRoute, useRouter$1 as useRouteNode, routerContext, routeContext };","map":null,"metadata":{},"sourceType":"module"}