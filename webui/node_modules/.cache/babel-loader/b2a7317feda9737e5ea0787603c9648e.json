{"ast":null,"code":"var _jsxFileName = \"/home/vladislav/React/app2/hkt/webui/src/components/Graphic/Vis.js\";\nimport React from 'react';\nimport './style.css'; //import 'react-vis/dist/style.css';\n\nimport { XYPlot, XAxis, YAxis, VerticalGridLines, HorizontalGridLines, HorizontalBarSeries, HorizontalBarSeriesCanvas } from 'react-vis';\nexport default class Vis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      useCanvas: true\n    };\n  }\n\n  render() {\n    const useCanvas = this.state.useCanvas;\n    const BarSeries = useCanvas ? HorizontalBarSeriesCanvas : HorizontalBarSeries;\n    const content = useCanvas ? 'TOGGLE TO SVG' : 'TOGGLE TO CANVAS';\n    let visdata = [];\n    let maxX = 10;\n\n    if (this.props.visdata) {\n      visdata = this.props.visdata;\n\n      for (var i in visdata) {\n        let num = parseInt(visdata[i].x, 10);\n        if (num > maxX) maxX = num;\n      }\n    }\n\n    console.log('[vis] data', visdata); // xDomain={[0, 1]} tickValues={[0, 20, 60, 80, 100]}\n    //{[{y: 2, x: 12}, {y: 4, x: 2}, {y: 5, x: 11}]}\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(XYPlot, {\n      width: 600,\n      height: 800,\n      stackBy: \"x\",\n      xDomain: [0, maxX + 2],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(VerticalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(HorizontalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      title: \"\\u041B\\u044E\\u0434\\u0438\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      tickValues: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],\n      title: \"\\u0427\\u0430\\u0441\\u044B\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(BarSeries, {\n      data: visdata,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/vladislav/React/app2/hkt/webui/src/components/Graphic/Vis.js"],"names":["React","XYPlot","XAxis","YAxis","VerticalGridLines","HorizontalGridLines","HorizontalBarSeries","HorizontalBarSeriesCanvas","Vis","Component","constructor","props","state","useCanvas","render","BarSeries","content","visdata","maxX","i","num","parseInt","x","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,aAAP,C,CACA;;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,KAHF,EAIEC,iBAJF,EAKEC,mBALF,EAMEC,mBANF,EAOEC,yBAPF,QAQO,WARP;AAWA,eAAe,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAGH;;AACDC,EAAAA,MAAM,GAAG;AAAA,UACED,SADF,GACe,KAAKD,KADpB,CACEC,SADF;AAEL,UAAME,SAAS,GAAGF,SAAS,GAAGN,yBAAH,GAA+BD,mBAA1D;AACA,UAAMU,OAAO,GAAGH,SAAS,GAAG,eAAH,GAAqB,kBAA9C;AACA,QAAII,OAAO,GAAG,EAAd;AACA,QAAIC,IAAI,GAAG,EAAX;;AACA,QAAI,KAAKP,KAAL,CAAWM,OAAf,EAAwB;AACpBA,MAAAA,OAAO,GAAG,KAAKN,KAAL,CAAWM,OAArB;;AAEA,WAAK,IAAIE,CAAT,IAAcF,OAAd,EAAuB;AACnB,YAAIG,GAAG,GAAGC,QAAQ,CAACJ,OAAO,CAACE,CAAD,CAAP,CAAWG,CAAZ,EAAe,EAAf,CAAlB;AACA,YAAIF,GAAG,GAAGF,IAAV,EAAgBA,IAAI,GAAGE,GAAP;AACnB;AACJ;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BP,OAA1B,EAdK,CAeL;AACA;;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,GAAf;AAAoB,MAAA,MAAM,EAAE,GAA5B;AAAiC,MAAA,OAAO,EAAC,GAAzC;AAA6C,MAAA,OAAO,EAAE,CAAC,CAAD,EAAIC,IAAI,GAAC,CAAT,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,KAAD;AAAO,MAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,EAA/B,EAAmC,EAAnC,EAAuC,EAAvC,EAA2C,EAA3C,EAA+C,EAA/C,EAAmD,EAAnD,EAAuD,EAAvD,EAA2D,EAA3D,EAA+D,EAA/D,EAAmE,EAAnE,EAAuE,EAAvE,EAA2E,EAA3E,EAA+E,EAA/E,EAAmF,EAAnF,CAAnB;AAA2G,MAAA,KAAK,EAAC,0BAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAED,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADN,CADJ;AAWH;;AAnC8C","sourcesContent":["import React from 'react';\n\nimport './style.css';\n//import 'react-vis/dist/style.css';\nimport {\n  XYPlot,\n  XAxis,\n  YAxis,\n  VerticalGridLines,\n  HorizontalGridLines,\n  HorizontalBarSeries,\n  HorizontalBarSeriesCanvas\n} from 'react-vis';\n\n\nexport default class Vis extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n          useCanvas: true\n      };\n  }\n  render() {\n      const {useCanvas} = this.state;\n      const BarSeries = useCanvas ? HorizontalBarSeriesCanvas : HorizontalBarSeries;\n      const content = useCanvas ? 'TOGGLE TO SVG' : 'TOGGLE TO CANVAS';\n      let visdata = [];\n      let maxX = 10;\n      if (this.props.visdata) {\n          visdata = this.props.visdata;\n\n          for (var i in visdata) {\n              let num = parseInt(visdata[i].x, 10);\n              if (num > maxX) maxX = num; \n          }\n      }\n      console.log('[vis] data', visdata);\n      // xDomain={[0, 1]} tickValues={[0, 20, 60, 80, 100]}\n      //{[{y: 2, x: 12}, {y: 4, x: 2}, {y: 5, x: 11}]}\n      return (\n          <div>\n                <XYPlot width={600} height={800} stackBy=\"x\" xDomain={[0, maxX+2]}>\n                    <VerticalGridLines />\n                    <HorizontalGridLines />\n                    <XAxis title=\"Люди\"/>\n                    <YAxis tickValues={[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 ,18, 19, 20, 21, 22, 23]} title=\"Часы\"/>\n                    <BarSeries data={visdata} />\n                </XYPlot>\n          </div>\n        );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}