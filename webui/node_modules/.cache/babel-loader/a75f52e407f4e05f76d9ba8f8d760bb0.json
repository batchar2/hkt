{"ast":null,"code":"import _objectSpread from \"/home/bat/Apps/Vizorlabs/VZA/webui/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/bat/Apps/Vizorlabs/VZA/webui/src/pages/ObjectDetail/ObjectDetail.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { actions as routerActions, createRouteNodeSelector } from 'redux-router5';\nimport ImageMapper from 'react-image-mapper';\nimport { Link } from 'react-router5';\nimport axios from 'axios';\nimport ImageUploader from 'react-images-upload';\nimport { ROUTES } from '../../constants/router.consts';\nimport objectDetailActions from '../../store/actions/object-detail.actions.js';\nimport NotFoundPicture from './notfound.png';\nimport CameraList from '../../components/CameraList';\nimport ObjectActions from '../../components/ObjectActions';\nimport './style.css';\n\nclass ObjectDetail extends React.Component {\n  constructor(props) {\n    super(props); // this.state = {\n    //     cameras: [],\n    //     name: undefined,\n    //     mapPicture: undefined,\n    //     mapData: undefined,\n    //     mapid: undefined,\n    //     hoveredArea: null,\n    // };\n  }\n\n  componentDidMount() {\n    this.props.loadObjectDetail(this.props.params.id);\n  }\n\n  enterArea(area) {\n    console.error('area>>>>', area);\n    this.props.hoverChanged(this.props.object, area, true);\n  }\n\n  leaveArea(area) {\n    this.props.hoverChanged(this.props.object, null, false);\n  }\n\n  getTipPosition(area) {\n    console.error('getTipPosition>', area);\n    return {\n      top: \"\".concat(area.center[1], \"px\"),\n      left: \"\".concat(area.center[0], \"px\")\n    };\n  }\n\n  mapClicked(area) {}\n\n  render() {\n    let img = NotFoundPicture;\n    let id = 0;\n\n    if (this.props.object.id) {\n      id = this.props.object.id;\n      img = \"\".concat(axios.defaults.baseURL).concat(this.props.object.picture);\n      console.error('obj_detail', img);\n    }\n\n    let mapData = {\n      name: \"my-map\",\n      areas: [] //this.props.object.\n\n    };\n\n    if (this.props.object && this.props.object.cameras) {\n      console.error(\"RENDER 2>\", this.props.object);\n\n      for (let i = 0; i < this.props.object.cameras.length; i++) {\n        let coords = JSON.parse(this.props.object.cameras[i].position_coords);\n        let camid = this.props.object.cameras[i].id;\n        mapData.areas.push({\n          camid: camid,\n          name: \"camera_\".concat(camid),\n          coords: coords,\n          shape: 'circle',\n          preFillColor: 'red',\n          fillColor: 'red'\n        });\n      }\n    }\n\n    if (!this.props.object.id) {\n      console.error(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      });\n    } // let mapData = {\n    //     name: \"my-map\",\n    //     areas: [\n    //         {\n    //           camid: 1,\n    //           name: \"camera 1\",\n    //           //picture: img,\n    //           coords: [50, 50, 15],\n    //           shape: \"circle\",\n    //           preFillColor: \"blue\",\n    //           fillColor: \"red\"\n    //         },\n    //         {\n    //           camid: 2,\n    //           name: \"camera 2\",\n    //           //picture: img,\n    //           coords: [150, 150, 15],\n    //           shape: \"circle\",\n    //           preFillColor: \"blue\",\n    //           fillColor: \"red\"\n    //         },\n    //         {\n    //           camid: 3,\n    //           name: \"camera 3\",\n    //           //picture: img,\n    //           coords: [250, 250, 15],\n    //           shape: \"circle\",\n    //           preFillColor: \"blue\",\n    //           fillColor: \"red\"\n    //         },\n    //     ],\n    // };\n\n\n    let a = false;\n\n    if (this.props.object.hoveredArea) {\n      a = true;\n    }\n\n    console.error('!!!this.props.object.hoveredArea', this.props.object.hoveredArea, a);\n    return React.createElement(\"div\", {\n      id: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"breadcrumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"\\u041E\\u044A\\u0435\\u043A\\u0442\\u044B\")), React.createElement(\"div\", {\n      class: \"active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, this.props.object.name))), React.createElement(\"div\", {\n      className: \"title-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, this.props.object.name), React.createElement(ObjectActions, {\n      id: this.props.params.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(ImageMapper, {\n      src: img,\n      map: mapData,\n      onMouseEnter: area => this.enterArea(area),\n      onMouseLeave: area => this.leaveArea(area),\n      onClick: area => this.mapClicked(area),\n      width: 720,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), this.props.object.hoveredArea && React.createElement(\"span\", {\n      className: \"tooltip\",\n      style: _objectSpread({}, this.getTipPosition(this.props.object.hoveredArea)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tooltip-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.props.object.hoveredArea && this.props.object.hoveredArea.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: img,\n      width: \"128\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }))))))), React.createElement(CameraList, {\n      cameras: this.props.object.cameras,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user,\n  object: state.object\n}), dispatch => ({\n  // пользователь нажал регистрацию\n  loadObjectDetail: objectId => {\n    dispatch(objectDetailActions.loadObjectDetail(objectId));\n  },\n  hoverChanged: (obj, camera, hoverVal) => {\n    dispatch(objectDetailActions.hoverChanged(obj, camera, hoverVal));\n  }\n}))(ObjectDetail);","map":{"version":3,"sources":["/home/bat/Apps/Vizorlabs/VZA/webui/src/pages/ObjectDetail/ObjectDetail.js"],"names":["React","connect","actions","routerActions","createRouteNodeSelector","ImageMapper","Link","axios","ImageUploader","ROUTES","objectDetailActions","NotFoundPicture","CameraList","ObjectActions","ObjectDetail","Component","constructor","props","componentDidMount","loadObjectDetail","params","id","enterArea","area","console","error","hoverChanged","object","leaveArea","getTipPosition","top","center","left","mapClicked","render","img","defaults","baseURL","picture","mapData","name","areas","cameras","i","length","coords","JSON","parse","position_coords","camid","push","shape","preFillColor","fillColor","a","hoveredArea","state","user","dispatch","objectId","obj","camera","hoverVal"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { actions as routerActions, createRouteNodeSelector } from 'redux-router5';\nimport ImageMapper from 'react-image-mapper';\nimport { Link } from 'react-router5';\n\n\nimport axios from 'axios';\nimport ImageUploader from 'react-images-upload';\n\nimport { ROUTES } from '../../constants/router.consts';\nimport objectDetailActions from '../../store/actions/object-detail.actions.js';\nimport NotFoundPicture from './notfound.png';\nimport CameraList from '../../components/CameraList'\nimport ObjectActions from '../../components/ObjectActions'\n\nimport './style.css';\n\nclass ObjectDetail extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        // this.state = {\n        //     cameras: [],\n        //     name: undefined,\n        //     mapPicture: undefined,\n        //     mapData: undefined,\n        //     mapid: undefined,\n        //     hoveredArea: null,\n        // };\n    }\n\n    componentDidMount() {\n        this.props.loadObjectDetail(this.props.params.id);\n    }\n\n    enterArea(area) {\n        console.error('area>>>>', area);\n        this.props.hoverChanged(this.props.object, area, true);\n    }\n\n    leaveArea(area) {\n        this.props.hoverChanged(this.props.object, null, false);\n    }\n\n    getTipPosition(area) {\n        console.error('getTipPosition>', area);\n        return { top: `${area.center[1]}px`, left: `${area.center[0]}px` };\n    }\n\n    mapClicked(area) {\n\n    }\n\n    render() {\n        let img = NotFoundPicture;\n        let id = 0;\n        if (this.props.object.id) {\n            id = this.props.object.id;\n            img =   `${axios.defaults.baseURL}${this.props.object.picture}`;\n            console.error('obj_detail', img);\n        }\n        let mapData = {\n            name: \"my-map\",\n            areas: []//this.props.object.\n        };\n        if (this.props.object &&  this.props.object.cameras) {\n            console.error(\"RENDER 2>\", this.props.object);\n            for (let i = 0; i < this.props.object.cameras.length; i++) {\n                let coords = JSON.parse(this.props.object.cameras[i].position_coords);\n                let camid = this.props.object.cameras[i].id;\n                mapData.areas.push({\n                    camid: camid,\n                    name: `camera_${camid}`,\n                    coords: coords,\n                    shape: 'circle',\n                    preFillColor: 'red',\n                    fillColor: 'red',\n                });\n            }\n        }\n        if (!this.props.object.id) {\n            console.error(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n            return (<div></div>);\n        }\n        // let mapData = {\n        //     name: \"my-map\",\n        //     areas: [\n        //         {\n        //           camid: 1,\n        //           name: \"camera 1\",\n        //           //picture: img,\n        //           coords: [50, 50, 15],\n        //           shape: \"circle\",\n        //           preFillColor: \"blue\",\n        //           fillColor: \"red\"\n        //         },\n        //         {\n        //           camid: 2,\n        //           name: \"camera 2\",\n        //           //picture: img,\n        //           coords: [150, 150, 15],\n        //           shape: \"circle\",\n        //           preFillColor: \"blue\",\n        //           fillColor: \"red\"\n        //         },\n        //         {\n        //           camid: 3,\n        //           name: \"camera 3\",\n        //           //picture: img,\n        //           coords: [250, 250, 15],\n        //           shape: \"circle\",\n        //           preFillColor: \"blue\",\n        //           fillColor: \"red\"\n        //         },\n        //     ],\n        // };\n        let a = false;\n        if (this.props.object.hoveredArea) {\n            a = true;\n        }\n        console.error('!!!this.props.object.hoveredArea', this.props.object.hoveredArea, a);\n        return (\n          <div id=\"content\">\n              <div className=\"content-wrapper\">\n                  <div class=\"breadcrumb\">\n                      <div><a href=\"#\">Оъекты</a></div>\n                      <div class=\"active\"><a href=\"#\">{this.props.object.name}</a></div>\n                  </div>\n                  <div className=\"title-wrapper\">\n                      <h2>{this.props.object.name}</h2>\n                      <ObjectActions id={this.props.params.id}/>\n                  </div>\n\n                  <div className=\"row\">\n                      <div className=\"col\">\n                          <div className=\"container\">\n\n                              <ImageMapper\n                                  src={img}\n                                  map={mapData}\n                                  onMouseEnter={area => this.enterArea(area)}\n                                  onMouseLeave={area => this.leaveArea(area)}\n                                  onClick={area => this.mapClicked(area)}\n                                  width={720}\n                                  />\n                                  {\n                                     this.props.object.hoveredArea &&\n                                      <span className=\"tooltip\" style={{ ...this.getTipPosition(this.props.object.hoveredArea)}}>\n                                          <div className=\"tooltip-header\">\n                                              { this.props.object.hoveredArea && this.props.object.hoveredArea.name }\n                                          </div>\n                                          <div>\n                                              <img src={img} width=\"128\"/>\n                                          </div>\n                                      </span>\n                                  }\n                              </div>\n                        </div>\n                    </div>\n              </div>\n              <CameraList cameras={this.props.object.cameras}/>\n          </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        user: state.user,\n        object: state.object,\n    }),\n    dispatch => ({\n        // пользователь нажал регистрацию\n        loadObjectDetail: (objectId) => {\n            dispatch(objectDetailActions.loadObjectDetail(objectId));\n        },\n        hoverChanged: (obj, camera, hoverVal) => {\n          dispatch(objectDetailActions.hoverChanged(obj, camera, hoverVal));\n        }\n    }),\n)(ObjectDetail);\n"]},"metadata":{},"sourceType":"module"}