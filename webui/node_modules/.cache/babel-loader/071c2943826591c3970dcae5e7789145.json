{"ast":null,"code":"import _objectSpread from \"/home/bat/Apps/Vizorlabs/VZA/webui/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/bat/Apps/Vizorlabs/VZA/webui/src/pages/ObjectDetail/ObjectDetail.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { actions as routerActions, createRouteNodeSelector } from 'redux-router5';\nimport ImageMapper from 'react-image-mapper';\nimport { Link } from 'react-router5';\nimport ImageUploader from 'react-images-upload';\nimport { ROUTES } from '../../constants/router.consts';\nimport objectDetailActions from '../../store/actions/object-detail.actions.js';\nimport NotFoundPicture from './notfound.png';\nimport CameraList from '../../components/CameraList';\nimport ObjectActions from '../../components/ObjectActions';\n\nclass ObjectDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cameras: [],\n      name: undefined,\n      mapPicture: undefined,\n      mapData: undefined,\n      mapid: undefined,\n      hoveredArea: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadObjectDetail(this.props.params.id);\n  }\n\n  enterArea(area) {\n    console.error('area', area);\n    this.props.hoverChanged(this.props.objectDetail, area, true);\n  }\n\n  leaveArea(area) {\n    this.props.hoverChanged(this.props.objectDetail, area, false);\n  }\n\n  getTipPosition(area) {\n    /*return { top: `${area.center[1]}px`, left: `${area.center[0]}px` };*/\n  }\n\n  mapClicked(area) {}\n\n  render() {\n    let img = NotFoundPicture;\n    let id = 0;\n\n    if (this.props.object) {\n      id = this.props.object.id; //img = this.props.object.picture;\n\n      console.error('obj_detail', img);\n    }\n\n    let mapData = {\n      name: \"my-map\",\n      areas: [{\n        camid: 1,\n        name: \"camera 1\",\n        //picture: img,\n        coords: [50, 50, 15],\n        shape: \"circle\",\n        preFillColor: \"blue\",\n        fillColor: \"red\"\n      }, {\n        camid: 2,\n        name: \"camera 2\",\n        //picture: img,\n        coords: [150, 150, 15],\n        shape: \"circle\",\n        preFillColor: \"blue\",\n        fillColor: \"red\"\n      }, {\n        camid: 3,\n        name: \"camera 3\",\n        //picture: img,\n        coords: [250, 250, 15],\n        shape: \"circle\",\n        preFillColor: \"blue\",\n        fillColor: \"red\"\n      }]\n    };\n    return React.createElement(\"div\", {\n      id: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.props.object.name), React.createElement(ObjectActions, {\n      id: this.props.params.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(ImageMapper, {\n      src: img,\n      map: mapData,\n      onMouseEnter: area => this.enterArea(area),\n      onMouseLeave: area => this.leaveArea(area),\n      onClick: area => this.mapClicked(area),\n      width: 720,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), this.props.object && React.createElement(\"span\", {\n      className: \"tooltip\",\n      style: _objectSpread({}, this.getTipPosition(this.props.object)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tooltip-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.props.object && this.props.object.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: img,\n      width: \"128\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })))), React.createElement(CameraList, {\n      cameras: this.props.object.cameras,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user,\n  object: state.object\n}), dispatch => ({\n  // пользователь нажал регистрацию\n  loadObjectDetail: objectId => {\n    dispatch(objectDetailActions.loadObjectDetail(objectId));\n  },\n  hoverChanged: (obj, camera, hoverVal) => {\n    dispatch(objectDetailActions.hoverChanged(obj, camera, hoverVal));\n  }\n}))(ObjectDetail);","map":{"version":3,"sources":["/home/bat/Apps/Vizorlabs/VZA/webui/src/pages/ObjectDetail/ObjectDetail.js"],"names":["React","connect","actions","routerActions","createRouteNodeSelector","ImageMapper","Link","ImageUploader","ROUTES","objectDetailActions","NotFoundPicture","CameraList","ObjectActions","ObjectDetail","Component","constructor","props","state","cameras","name","undefined","mapPicture","mapData","mapid","hoveredArea","componentDidMount","loadObjectDetail","params","id","enterArea","area","console","error","hoverChanged","objectDetail","leaveArea","getTipPosition","mapClicked","render","img","object","areas","camid","coords","shape","preFillColor","fillColor","user","dispatch","objectId","obj","camera","hoverVal"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { actions as routerActions, createRouteNodeSelector } from 'redux-router5';\nimport ImageMapper from 'react-image-mapper';\nimport { Link } from 'react-router5';\n\nimport ImageUploader from 'react-images-upload';\n\nimport { ROUTES } from '../../constants/router.consts';\nimport objectDetailActions from '../../store/actions/object-detail.actions.js';\nimport NotFoundPicture from './notfound.png';\nimport CameraList from '../../components/CameraList'\nimport ObjectActions from '../../components/ObjectActions'\n\nclass ObjectDetail extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            cameras: [],\n            name: undefined,\n            mapPicture: undefined,\n            mapData: undefined,\n            mapid: undefined,\n            hoveredArea: null,\n        };\n    }\n\n    componentDidMount() {\n        this.props.loadObjectDetail(this.props.params.id);\n    }\n\n    enterArea(area) {\n        console.error('area', area);\n        this.props.hoverChanged(this.props.objectDetail, area, true);\n    }\n\n    leaveArea(area) {\n        this.props.hoverChanged(this.props.objectDetail, area, false);\n    }\n\n    getTipPosition(area) {\n        /*return { top: `${area.center[1]}px`, left: `${area.center[0]}px` };*/\n    }\n\n    mapClicked(area) {\n\n    }\n\n    render() {\n        let img = NotFoundPicture;\n        let id = 0;\n        if (this.props.object) {\n            id = this.props.object.id;\n            //img = this.props.object.picture;\n            console.error('obj_detail', img);\n        }\n        let mapData = {\n            name: \"my-map\",\n            areas: [\n                {\n                  camid: 1,\n                  name: \"camera 1\",\n                  //picture: img,\n                  coords: [50, 50, 15],\n                  shape: \"circle\",\n                  preFillColor: \"blue\",\n                  fillColor: \"red\"\n                },\n                {\n                  camid: 2,\n                  name: \"camera 2\",\n                  //picture: img,\n                  coords: [150, 150, 15],\n                  shape: \"circle\",\n                  preFillColor: \"blue\",\n                  fillColor: \"red\"\n                },\n                {\n                  camid: 3,\n                  name: \"camera 3\",\n                  //picture: img,\n                  coords: [250, 250, 15],\n                  shape: \"circle\",\n                  preFillColor: \"blue\",\n                  fillColor: \"red\"\n                },\n            ],\n        };\n        return (\n          <div id=\"content\">\n              <div className=\"content-wrapper\">\n                  <div className=\"title-wrapper\">\n                      <h2>{this.props.object.name}</h2>\n                      <ObjectActions id={this.props.params.id}/>\n                  </div>\n                  <ImageMapper\n                      src={img}\n                      map={mapData}\n                      onMouseEnter={area => this.enterArea(area)}\n                      onMouseLeave={area => this.leaveArea(area)}\n                      onClick={area => this.mapClicked(area)}\n                      width={720}\n                      />\n                  {\n                      this.props.object &&\n                      <span className=\"tooltip\" style={{ ...this.getTipPosition(this.props.object)}}>\n                          <div className=\"tooltip-header\">\n                              { this.props.object && this.props.object.name }\n                          </div>\n                          <div>\n                              <img src={img} width=\"128\"/>\n                          </div>\n                      </span>\n                  }\n           </div>\n           <CameraList cameras={this.props.object.cameras}/>\n        </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        user: state.user,\n        object: state.object,\n    }),\n    dispatch => ({\n        // пользователь нажал регистрацию\n        loadObjectDetail: (objectId) => {\n            dispatch(objectDetailActions.loadObjectDetail(objectId));\n        },\n        hoverChanged: (obj, camera, hoverVal) => {\n          dispatch(objectDetailActions.hoverChanged(obj, camera, hoverVal));\n        }\n    }),\n)(ObjectDetail);\n"]},"metadata":{},"sourceType":"module"}