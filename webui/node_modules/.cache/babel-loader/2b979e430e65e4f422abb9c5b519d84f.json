{"ast":null,"code":"var _jsxFileName = \"/home/vladislav/React/app2/hkt/webui/src/pages/Report/Report.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { actions as routerActions, createRouteNodeSelector } from 'redux-router5';\nimport ImageMapper from 'react-image-mapper';\nimport { Link } from 'react-router5';\nimport ImageUploader from 'react-images-upload';\nimport { ROUTES } from '../../constants/router.consts';\nimport objectDetailActions from '../../store/actions/object-detail.actions.js';\nimport NotFoundPicture from './notfound.png';\nimport CameraList from '../../components/CameraList';\nimport ObjectActions from '../../components/ObjectActions';\nimport NavBar from '../../components/NavBar';\n\nclass Report extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      id: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user,\n  object: state.object\n}), dispatch => ({\n  // пользователь нажал регистрацию\n  loadObjectDetail: objectId => {\n    dispatch(objectDetailActions.loadObjectDetail(objectId));\n  },\n  hoverChanged: (obj, camera, hoverVal) => {\n    dispatch(objectDetailActions.hoverChanged(obj, camera, hoverVal));\n  }\n}))(Report);","map":{"version":3,"sources":["/home/vladislav/React/app2/hkt/webui/src/pages/Report/Report.js"],"names":["React","connect","actions","routerActions","createRouteNodeSelector","ImageMapper","Link","ImageUploader","ROUTES","objectDetailActions","NotFoundPicture","CameraList","ObjectActions","NavBar","Report","Component","render","state","user","object","dispatch","loadObjectDetail","objectId","hoverChanged","obj","camera","hoverVal"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,OAAO,IAAIC,aAApB,EAAmCC,uBAAnC,QAAkE,eAAlE;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,IAAT,QAAqB,eAArB;AAEA,OAAOC,aAAP,MAA0B,qBAA1B;AAEA,SAASC,MAAT,QAAuB,+BAAvB;AACA,OAAOC,mBAAP,MAAgC,8CAAhC;AACA,OAAOC,eAAP,MAA4B,gBAA5B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,MAAMC,MAAN,SAAqBd,KAAK,CAACe,SAA3B,CAAqC;AAEjCC,EAAAA,MAAM,GAAG;AACL,WACE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADF;AAOH;;AAVgC;;AAarC,eAAef,OAAO,CAClBgB,KAAK,KAAK;AACNC,EAAAA,IAAI,EAAED,KAAK,CAACC,IADN;AAENC,EAAAA,MAAM,EAAEF,KAAK,CAACE;AAFR,CAAL,CADa,EAKlBC,QAAQ,KAAK;AACT;AACAC,EAAAA,gBAAgB,EAAGC,QAAD,IAAc;AAC5BF,IAAAA,QAAQ,CAACX,mBAAmB,CAACY,gBAApB,CAAqCC,QAArC,CAAD,CAAR;AACH,GAJQ;AAKTC,EAAAA,YAAY,EAAE,CAACC,GAAD,EAAMC,MAAN,EAAcC,QAAd,KAA2B;AACvCN,IAAAA,QAAQ,CAACX,mBAAmB,CAACc,YAApB,CAAiCC,GAAjC,EAAsCC,MAAtC,EAA8CC,QAA9C,CAAD,CAAR;AACD;AAPQ,CAAL,CALU,CAAP,CAcbZ,MAda,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { actions as routerActions, createRouteNodeSelector } from 'redux-router5';\nimport ImageMapper from 'react-image-mapper';\nimport { Link } from 'react-router5';\n\nimport ImageUploader from 'react-images-upload';\n\nimport { ROUTES } from '../../constants/router.consts';\nimport objectDetailActions from '../../store/actions/object-detail.actions.js';\nimport NotFoundPicture from './notfound.png';\nimport CameraList from '../../components/CameraList';\nimport ObjectActions from '../../components/ObjectActions';\nimport NavBar from '../../components/NavBar';\n\nclass Report extends React.Component {\n\n    render() {\n        return (\n          <div id=\"content\">\n              <div className=\"content-wrapper\">\n\n              </div>\n          </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        user: state.user,\n        object: state.object,\n    }),\n    dispatch => ({\n        // пользователь нажал регистрацию\n        loadObjectDetail: (objectId) => {\n            dispatch(objectDetailActions.loadObjectDetail(objectId));\n        },\n        hoverChanged: (obj, camera, hoverVal) => {\n          dispatch(objectDetailActions.hoverChanged(obj, camera, hoverVal));\n        }\n    }),\n)(Report);\n"]},"metadata":{},"sourceType":"module"}