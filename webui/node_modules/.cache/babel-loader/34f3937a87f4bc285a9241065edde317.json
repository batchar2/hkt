{"ast":null,"code":"var dotOrEnd = '(\\\\..+$|$)';\nvar dotOrStart = '(^.+\\\\.|^)';\n\nvar getName = function (route) {\n  return typeof route === 'string' ? route : route.name || '';\n};\n\nvar test = function (route, regex) {\n  return regex.test(getName(route));\n};\n\nvar normaliseSegment = function (name) {\n  return name.replace('.', '\\\\.');\n};\n\nvar testRouteWithSegment = function (start, end) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var route = args[0];\n\n    var applySegment = function (segment) {\n      return test(route, new RegExp(start + normaliseSegment(segment) + end));\n    };\n\n    if (args.length === 2) {\n      return applySegment(args[1]);\n    }\n\n    return applySegment;\n  };\n};\n\nvar startsWithSegment = testRouteWithSegment('^', dotOrEnd);\nvar endsWithSegment = testRouteWithSegment(dotOrStart, '$');\nvar includesSegment = testRouteWithSegment(dotOrStart, dotOrEnd);\nexport { startsWithSegment, endsWithSegment, includesSegment };","map":null,"metadata":{},"sourceType":"module"}