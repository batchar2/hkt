{"ast":null,"code":"var _jsxFileName = \"/home/vladislav/React/app2/hkt/webui/src/pages/CameraEdit/CameraEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { actions as routerActions, createRouteNodeSelector } from 'redux-router5';\nimport ImageUploader from 'react-images-upload';\nimport { ROUTES } from '../../constants/router.consts';\nimport cameraDetailActions from '../../store/actions/camera-detail.actions.js';\nimport NotFoundPicture from './notfound.png';\nimport ImageMapper from 'react-image-mapper';\n\nclass CameraEdit extends React.Component {\n  onDropImage(pictureFiles, pictureDataURLs) {\n    this.pictureDataURLs = pictureDataURLs;\n    this.props.addPicture(pictureDataURLs, this.props.object);\n  }\n\n  handleSave(event) {\n    event.preventDefault();\n\n    if (this.getPicture) {\n      this.props.saveObject(this.getName.value, this.getPicture.src);\n    }\n  }\n\n  handleCancel(event) {\n    event.preventDefault();\n    this.props.navigateTo(ROUTES.GET_OBJECT_DETAIL);\n  }\n\n  render() {\n    let img = NotFoundPicture;\n    let mapData = {\n      name: \"my-map\",\n      areas: [{\n        camid: 1,\n        name: \"camera 1\",\n        //picture: img,\n        coords: [50, 50, 15],\n        shape: \"circle\",\n        preFillColor: \"blue\",\n        fillColor: \"red\"\n      }, {\n        camid: 2,\n        name: \"camera 2\",\n        //picture: img,\n        coords: [150, 150, 15],\n        shape: \"circle\",\n        preFillColor: \"blue\",\n        fillColor: \"red\"\n      }, {\n        camid: 3,\n        name: \"camera 3\",\n        //picture: img,\n        coords: [250, 250, 15],\n        shape: \"circle\",\n        preFillColor: \"blue\",\n        fillColor: \"red\"\n      }]\n    };\n    return React.createElement(\"div\", {\n      id: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content-wrapper col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u043A\\u0430\\u043C\\u0435\\u0440\\u044B\")), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"name\",\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      ref: input => this.getName = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"rtpsUrl\",\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"RTPS url\"), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"rtpsUrl\",\n      placeholder: \"RTPS url\",\n      ref: input => this.getRTPSurl = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"fps\",\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"FPS\"), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"fps\",\n      placeholder: \"FPS\",\n      ref: input => this.getFPS = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"threshold\",\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"\\u041F\\u043E\\u0440\\u043E\\u0433\"), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      step: \"0.01\",\n      min: \"0\",\n      max: \"1\",\n      className: \"form-control\",\n      id: \"threshold\",\n      placeholder: \"\\u041F\\u043E\\u0440\\u043E\\u0433\",\n      ref: input => this.getThreshold = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: e => this.handleCancel(e),\n      className: \"btn btn-secondary float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\")), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: e => this.handleSave(e),\n      className: \"btn btn-primary float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\")))));\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user,\n  object: state.object\n}), dispatch => ({\n  saveCamera: camera => {\n    dispatch(cameraDetailActions.saveCamera(camera));\n  }\n}))(CameraEdit);\n/*\n<div className=\"form-group row\">\n\n    <div className=\"custom-control custom-checkbox\">\n        <label htmlFor=\"isActive\" className=\"custom-control-label\">Активная</label>\n\n        <input\n            type=\"checkbox\"\n            className=\"custom-control-input\"\n            id=\"isActive\"\n            ref={input => this.getIsActive = input}\n        />\n\n    </div>\n</div>\n*/","map":{"version":3,"sources":["/home/vladislav/React/app2/hkt/webui/src/pages/CameraEdit/CameraEdit.js"],"names":["React","connect","actions","routerActions","createRouteNodeSelector","ImageUploader","ROUTES","cameraDetailActions","NotFoundPicture","ImageMapper","CameraEdit","Component","onDropImage","pictureFiles","pictureDataURLs","props","addPicture","object","handleSave","event","preventDefault","getPicture","saveObject","getName","value","src","handleCancel","navigateTo","GET_OBJECT_DETAIL","render","img","mapData","name","areas","camid","coords","shape","preFillColor","fillColor","input","getRTPSurl","getFPS","getThreshold","e","state","user","dispatch","saveCamera","camera"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { actions as routerActions, createRouteNodeSelector } from 'redux-router5';\nimport ImageUploader from 'react-images-upload';\nimport { ROUTES } from '../../constants/router.consts';\nimport cameraDetailActions from '../../store/actions/camera-detail.actions.js';\nimport NotFoundPicture from './notfound.png';\nimport ImageMapper from 'react-image-mapper';\nclass CameraEdit extends React.Component {\n\n\n\n    onDropImage(pictureFiles, pictureDataURLs) {\n        this.pictureDataURLs = pictureDataURLs;\n\n        this.props.addPicture(pictureDataURLs, this.props.object);\n    }\n\n    handleSave(event) {\n        event.preventDefault();\n        if (this.getPicture) {\n          this.props.saveObject(this.getName.value, this.getPicture.src);\n        }\n\n    }\n\n    handleCancel(event) {\n        event.preventDefault();\n\n        this.props.navigateTo(ROUTES.GET_OBJECT_DETAIL);\n    }\n\n    render() {\n        let img = NotFoundPicture;\n        let mapData = {\n            name: \"my-map\",\n            areas: [\n              {\n                  camid: 1,\n                  name: \"camera 1\",\n                  //picture: img,\n                  coords: [50, 50, 15],\n                  shape: \"circle\",\n                  preFillColor: \"blue\",\n                  fillColor: \"red\"\n              },\n              {\n                  camid: 2,\n                  name: \"camera 2\",\n                  //picture: img,\n                  coords: [150, 150, 15],\n                  shape: \"circle\",\n                  preFillColor: \"blue\",\n                  fillColor: \"red\"\n              },\n              {\n                  camid: 3,\n                  name: \"camera 3\",\n                  //picture: img,\n                  coords: [250, 250, 15],\n                  shape: \"circle\",\n                  preFillColor: \"blue\",\n                  fillColor: \"red\"\n              },\n            ],\n        };\n        return (\n          <div id=\"content\">\n              <div className=\"content-wrapper col\">\n                  <div className=\"title-wrapper\">\n                      <h2>Создание камеры</h2>\n                  </div>\n                  <div className=\"form-group row\">\n                      <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">Название</label>\n                      <div className=\"col-sm-10\">\n                          <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              id=\"name\"\n                              placeholder=\"Название\"\n                              ref={input => this.getName = input}\n                          />\n                      </div>\n                  </div>\n\n                  <div className=\"form-group row\">\n                      <label htmlFor=\"rtpsUrl\" className=\"col-sm-2 col-form-label\">RTPS url</label>\n                      <div className=\"col-sm-10\">\n                          <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              id=\"rtpsUrl\"\n                              placeholder=\"RTPS url\"\n                              ref={input => this.getRTPSurl = input}\n                          />\n                      </div>\n                  </div>\n\n                  <div className=\"form-group row\">\n                      <label htmlFor=\"fps\" className=\"col-sm-2 col-form-label\">FPS</label>\n                      <div className=\"col-sm-10\">\n                          <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              id=\"fps\"\n                              placeholder=\"FPS\"\n                              ref={input => this.getFPS = input}\n                          />\n                      </div>\n                  </div>\n\n                  <div className=\"form-group row\">\n                      <label htmlFor=\"threshold\" className=\"col-sm-2 col-form-label\">Порог</label>\n                      <div className=\"col-sm-10\">\n                          <input\n                              type=\"number\"\n                              step=\"0.01\"\n                              min=\"0\"\n                              max=\"1\"\n                              className=\"form-control\"\n                              id=\"threshold\"\n                              placeholder=\"Порог\"\n                              ref={input => this.getThreshold = input}\n                          />\n                      </div>\n                  </div>\n\n\n\n                  <div className=\"form-group row\">\n                      <div className=\"col-sm-8\"></div>\n                      <div className=\"col-sm-2\">\n                          <button onClick={e => this.handleCancel(e)} className=\"btn btn-secondary float-right\">\n                              Отмена\n                          </button>\n                      </div>\n                      <div className=\"col-sm-2\">\n                          <button onClick={e => this.handleSave(e)} className=\"btn btn-primary float-right\">\n                              Сохранить\n                          </button>\n                      </div>\n                  </div>\n              </div>\n          </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        user: state.user,\n        object: state.object,\n    }),\n    dispatch => ({\n        saveCamera: (camera) => {\n            dispatch(cameraDetailActions.saveCamera(camera));\n        },\n    }),\n)(CameraEdit);\n\n/*\n<div className=\"form-group row\">\n\n    <div className=\"custom-control custom-checkbox\">\n        <label htmlFor=\"isActive\" className=\"custom-control-label\">Активная</label>\n\n        <input\n            type=\"checkbox\"\n            className=\"custom-control-input\"\n            id=\"isActive\"\n            ref={input => this.getIsActive = input}\n        />\n\n    </div>\n</div>\n*/\n"]},"metadata":{},"sourceType":"module"}